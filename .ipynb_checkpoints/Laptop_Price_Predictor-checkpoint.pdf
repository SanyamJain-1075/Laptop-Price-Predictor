{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5916c28d-132e-4e97-a9d7-53cb87a362d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "83354bc8-a937-443b-aa2e-33d5099a5200",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('laptop_data.csv', encoding ='utf-8')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9b9338a2-a5df-4a38-bcf9-eb31ec8540bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37kg</td>\n",
       "      <td>71378.6832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34kg</td>\n",
       "      <td>47895.5232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86kg</td>\n",
       "      <td>30636.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16GB</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83kg</td>\n",
       "      <td>135195.3360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37kg</td>\n",
       "      <td>96095.8080</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Unnamed: 0 Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0           0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1           1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2           2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3           3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4           4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu   Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz   8GB            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz   8GB  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz   8GB            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz  16GB            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz   8GB            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  \n",
       "0  Intel Iris Plus Graphics 640  macOS  1.37kg   71378.6832  \n",
       "1        Intel HD Graphics 6000  macOS  1.34kg   47895.5232  \n",
       "2         Intel HD Graphics 620  No OS  1.86kg   30636.0000  \n",
       "3            AMD Radeon Pro 455  macOS  1.83kg  135195.3360  \n",
       "4  Intel Iris Plus Graphics 650  macOS  1.37kg   96095.8080  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "5e4152ff-3ab3-4bc5-8282-ded96a85b3af",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1303, 12)"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "e0a190f1-b450-478d-ad50-868d2c3c33e6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1303 entries, 0 to 1302\n",
      "Data columns (total 12 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   Unnamed: 0        1303 non-null   int64  \n",
      " 1   Company           1303 non-null   object \n",
      " 2   TypeName          1303 non-null   object \n",
      " 3   Inches            1303 non-null   float64\n",
      " 4   ScreenResolution  1303 non-null   object \n",
      " 5   Cpu               1303 non-null   object \n",
      " 6   Ram               1303 non-null   object \n",
      " 7   Memory            1303 non-null   object \n",
      " 8   Gpu               1303 non-null   object \n",
      " 9   OpSys             1303 non-null   object \n",
      " 10  Weight            1303 non-null   object \n",
      " 11  Price             1303 non-null   float64\n",
      "dtypes: float64(2), int64(1), object(9)\n",
      "memory usage: 122.3+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "626e142f-dd27-4914-bf42-6f7caeaa4c6b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.duplicated().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "5610aaed-e236-46d9-b13c-ef2bebb6a35c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Unnamed: 0          0\n",
       "Company             0\n",
       "TypeName            0\n",
       "Inches              0\n",
       "ScreenResolution    0\n",
       "Cpu                 0\n",
       "Ram                 0\n",
       "Memory              0\n",
       "Gpu                 0\n",
       "OpSys               0\n",
       "Weight              0\n",
       "Price               0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "1fd2b5ab-cd12-437c-943d-b724235c3301",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Unnamed: 0'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "f679c281-d744-412d-a11e-51e72649c4bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37kg</td>\n",
       "      <td>71378.6832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34kg</td>\n",
       "      <td>47895.5232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86kg</td>\n",
       "      <td>30636.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16GB</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83kg</td>\n",
       "      <td>135195.3360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8GB</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37kg</td>\n",
       "      <td>96095.8080</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu   Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz   8GB            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz   8GB  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz   8GB            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz  16GB            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz   8GB            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  \n",
       "0  Intel Iris Plus Graphics 640  macOS  1.37kg   71378.6832  \n",
       "1        Intel HD Graphics 6000  macOS  1.34kg   47895.5232  \n",
       "2         Intel HD Graphics 620  No OS  1.86kg   30636.0000  \n",
       "3            AMD Radeon Pro 455  macOS  1.83kg  135195.3360  \n",
       "4  Intel Iris Plus Graphics 650  macOS  1.37kg   96095.8080  "
      ]
     },
     "execution_count": 110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "fde00749-42ef-46ec-b3d2-1414d43c4b47",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Ram']=df['Ram'].str.replace('GB','')\n",
    "df['Weight']=df['Weight'].str.replace('kg','')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "4dd0903b-babd-46fd-ba6b-e393f0b9bade",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz   8            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz   8  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz   8            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz  16            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz   8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys Weight        Price  \n",
       "0  Intel Iris Plus Graphics 640  macOS   1.37   71378.6832  \n",
       "1        Intel HD Graphics 6000  macOS   1.34   47895.5232  \n",
       "2         Intel HD Graphics 620  No OS   1.86   30636.0000  \n",
       "3            AMD Radeon Pro 455  macOS   1.83  135195.3360  \n",
       "4  Intel Iris Plus Graphics 650  macOS   1.37   96095.8080  "
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "afc3474d-cbd0-49ed-9d60-2085cfe50e68",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Ram']=df['Ram'].astype('int32')\n",
    "df['Weight']=df['Weight'].astype('float32')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "8f187b69-47a8-4b61-984e-638636021946",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1303 entries, 0 to 1302\n",
      "Data columns (total 11 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   Company           1303 non-null   object \n",
      " 1   TypeName          1303 non-null   object \n",
      " 2   Inches            1303 non-null   float64\n",
      " 3   ScreenResolution  1303 non-null   object \n",
      " 4   Cpu               1303 non-null   object \n",
      " 5   Ram               1303 non-null   int32  \n",
      " 6   Memory            1303 non-null   object \n",
      " 7   Gpu               1303 non-null   object \n",
      " 8   OpSys             1303 non-null   object \n",
      " 9   Weight            1303 non-null   float32\n",
      " 10  Price             1303 non-null   float64\n",
      "dtypes: float32(1), float64(2), int32(1), object(7)\n",
      "memory usage: 101.9+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2755fa61-daa6-4ba7-8bfc-9d10043f1a0b",
   "metadata": {},
   "source": [
    "### EDA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "7cfe9f1a-07af-4e8b-9399-57fde7f99d65",
   "metadata": {},
   "outputs": [],
   "source": [
    "import seaborn as sb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "9f970d71-ead1-40f5-b035-8a3e830355b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\sanya\\AppData\\Local\\Temp\\ipykernel_9700\\1221715881.py:1: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sb.distplot(df['Price'])\n",
      "C:\\ProgramData\\anaconda3\\Lib\\site-packages\\seaborn\\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Price', ylabel='Density'>"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.distplot(df['Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "d96ad35b-d1a8-4e7b-99e0-1e1703c1c9b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Company'>"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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gYeHB16+fIk2bdogICAA2traErwlIiIiKukKHVBcXV0hhHjj8eDg4Hdeo0yZMli8eDEWL15c2PJERET0EeBaPERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7DChEREQkOwwoREREJDsMKERERCQ7OoX9gOPHj+OXX37B+fPnER8fj507d6JHjx7K40IIzJgxAytXrsTTp0/RtGlTLF26FHXq1FGek5aWhgkTJmDz5s14+fIl2rRpg2XLlqFq1aqSvCmSt2pT9hf6Y2LndNbAnRARkVwVugXlxYsXqFevHpYsWVLg8Xnz5mHBggVYsmQJzp07B0tLS7Rr1w4pKSnKc8aNG4edO3ciKCgI4eHheP78Obp06YLMzMwPfydERERUahS6BaVjx47o2LFjgceEEFi0aBGmTZuGXr16AQACAwNhYWGBTZs2YejQoUhKSsKaNWuwYcMGtG3bFgCwceNGWFtb4/Dhw2jfvr0ab4eIiIhKA0n7oNy9excJCQlwd3dX7tPX10erVq1w6tQpAMD58+eRkZGhco6VlRWcnJyU5+SVlpaG5ORklY2IiIhKL0kDSkJCAgDAwsJCZb+FhYXyWEJCAvT09FCuXLk3npPX7NmzYWpqqtysra2lvG0iIiKSGY2M4lEoFCqvhRD59uX1tnOmTp2KpKQk5RYXFyfZvRIREZH8SBpQLC0tASBfS0hiYqKyVcXS0hLp6el4+vTpG8/JS19fHyYmJiobERERlV6SBhQ7OztYWloiJCREuS89PR1hYWFo3rw5AKBhw4bQ1dVVOSc+Ph5XrlxRnkNEREQft0KP4nn+/Dlu376tfH337l1ERkbC3NwcNjY2GDduHGbNmgUHBwc4ODhg1qxZMDQ0xFdffQUAMDU1hbe3N8aPH4/y5cvD3NwcEyZMgLOzs3JUDxEREX3cCh1QIiIi4Obmpnzt6+sLABg0aBACAgIwadIkvHz5EiNGjFBO1Hbo0CEYGxsrP2bhwoXQ0dGBh4eHcqK2gIAAaGtrS/CWiIiIqKQrdEBxdXWFEOKNxxUKBfz9/eHv7//Gc8qUKYPFixdj8eLFhS1PREREHwGuxUNERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREssOAQkRERLLDgEJERESyw4BCREREsqNT3DdApCnVpuwv9MfEzumsgTshIqLCkrwFxd/fHwqFQmWztLRUHhdCwN/fH1ZWVjAwMICrqyuio6Olvg0iIiIqwTTyiKdOnTqIj49XbpcvX1YemzdvHhYsWIAlS5bg3LlzsLS0RLt27ZCSkqKJWyEiIqISSCMBRUdHB5aWlsqtYsWKALJbTxYtWoRp06ahV69ecHJyQmBgIFJTU7Fp0yZN3AoRERGVQBoJKLdu3YKVlRXs7OzQr18/3LlzBwBw9+5dJCQkwN3dXXmuvr4+WrVqhVOnTr3xemlpaUhOTlbZiIiIqPSSPKA0bdoU69evR3BwMFatWoWEhAQ0b94cjx8/RkJCAgDAwsJC5WMsLCyUxwoye/ZsmJqaKjdra2upb5uIiIhkRPKA0rFjR/Tu3RvOzs5o27Yt9u/PHkkRGBioPEehUKh8jBAi377cpk6diqSkJOUWFxcn9W0TERGRjGh8mHHZsmXh7OyMW7duoUePHgCAhIQEVK5cWXlOYmJivlaV3PT19aGvr6/pWyX6YBzSTEQkLY1P1JaWloZr166hcuXKsLOzg6WlJUJCQpTH09PTERYWhubNm2v6VoiIiKiEkLwFZcKECejatStsbGyQmJiIn376CcnJyRg0aBAUCgXGjRuHWbNmwcHBAQ4ODpg1axYMDQ3x1VdfSX0rREREVEJJHlAePHiAL7/8Eo8ePULFihXx6aef4syZM7C1tQUATJo0CS9fvsSIESPw9OlTNG3aFIcOHYKxsbHUt0JEREQllOQBJSgo6K3HFQoF/P394e/vL3VpIiIiKiW4WCARERHJDgMKERERyQ4DChEREckOAwoRERHJDgMKERERyQ4DChEREckOAwoRERHJDgMKERERyQ4DChEREckOAwoRERHJDgMKERERyQ4DChEREckOAwoRERHJDgMKERERyQ4DChEREckOAwoRERHJDgMKERERyQ4DChEREckOAwoRERHJDgMKERERyQ4DChEREckOAwoRERHJDgMKERERyQ4DChEREckOAwoRERHJDgMKERERyQ4DChEREcmOTnHfABG9v2pT9hf6Y2LndNbAnRARaRZbUIiIiEh2GFCIiIhIdhhQiIiISHYYUIiIiEh2GFCIiIhIdhhQiIiISHYYUIiIiEh2GFCIiIhIdhhQiIiISHYYUIiIiEh2GFCIiIhIdhhQiIiISHYYUIiIiEh2GFCIiIhIdnSK+waISH6qTdlf6I+JndNZA3dCRB8rtqAQERGR7LAFhYiKTVG11LBFiKjkYUAhIpIIgxCRdPiIh4iIiGSHLShERCUMH43Rx6BYW1CWLVsGOzs7lClTBg0bNsSJEyeK83aIiIhIJoqtBWXLli0YN24cli1bhhYtWuCPP/5Ax44dcfXqVdjY2BTXbRERURGTc4tQUdaSc53iUGwBZcGCBfD29saQIUMAAIsWLUJwcDCWL1+O2bNnF9dtERERUR7FEYSKJaCkp6fj/PnzmDJlisp+d3d3nDp1Kt/5aWlpSEtLU75OSkoCACQnJxd4/ay01ELf05uu9TaswzpFXYt1WId1irZOUdb6GOrk7BNCvPsCohj8+++/AoA4efKkyv6ff/5Z1KhRI9/5fn5+AgA3bty4cePGrRRscXFx78wKxTqKR6FQqLwWQuTbBwBTp06Fr6+v8nVWVhaePHmC8uXL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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Company'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "22ec8985-e10f-4aaa-8cc7-cf6f9123fbf3",
   "metadata": {},
   "source": [
    "#### Most selling laptop brands are Dell, Lenovo, HP, Asus.."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4df2ea8e-24e2-43ea-81c0-c6d107c4bf07",
   "metadata": {},
   "source": [
    "### Laptop company vs Price -->"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "fa4f6ca6-aafa-492b-b8cf-ce9aa0b8dc98",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "sb.barplot(x=df['Company'],y=df['Price'])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "98111a4e-a8f2-4b48-b140-236a72d4234e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='TypeName'>"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['TypeName'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "b8a692a5-de99-492d-8df4-958fbfb218f5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.barplot(x=df['TypeName'],y=df['Price'])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "7ea1aa82-6ed7-4c3e-952a-740df305f85d",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\sanya\\AppData\\Local\\Temp\\ipykernel_9700\\2151682018.py:1: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sb.distplot(df['Inches'])\n",
      "C:\\ProgramData\\anaconda3\\Lib\\site-packages\\seaborn\\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Inches', ylabel='Density'>"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.distplot(df['Inches'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "b2253210-3607-4d22-b439-9750e571c4cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.barplot(x=df['Inches'],y=df['Price'])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "1b9ad7e0-a855-4f4b-8f62-9c6dc8808f8c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ScreenResolution\n",
       "Full HD 1920x1080                                507\n",
       "1366x768                                         281\n",
       "IPS Panel Full HD 1920x1080                      230\n",
       "IPS Panel Full HD / Touchscreen 1920x1080         53\n",
       "Full HD / Touchscreen 1920x1080                   47\n",
       "1600x900                                          23\n",
       "Touchscreen 1366x768                              16\n",
       "Quad HD+ / Touchscreen 3200x1800                  15\n",
       "IPS Panel 4K Ultra HD 3840x2160                   12\n",
       "IPS Panel 4K Ultra HD / Touchscreen 3840x2160     11\n",
       "4K Ultra HD / Touchscreen 3840x2160               10\n",
       "4K Ultra HD 3840x2160                              7\n",
       "Touchscreen 2560x1440                              7\n",
       "IPS Panel 1366x768                                 7\n",
       "IPS Panel Quad HD+ / Touchscreen 3200x1800         6\n",
       "IPS Panel Retina Display 2560x1600                 6\n",
       "IPS Panel Retina Display 2304x1440                 6\n",
       "Touchscreen 2256x1504                              6\n",
       "IPS Panel Touchscreen 2560x1440                    5\n",
       "IPS Panel Retina Display 2880x1800                 4\n",
       "IPS Panel Touchscreen 1920x1200                    4\n",
       "1440x900                                           4\n",
       "IPS Panel 2560x1440                                4\n",
       "IPS Panel Quad HD+ 2560x1440                       3\n",
       "Quad HD+ 3200x1800                                 3\n",
       "1920x1080                                          3\n",
       "Touchscreen 2400x1600                              3\n",
       "2560x1440                                          3\n",
       "IPS Panel Touchscreen 1366x768                     3\n",
       "IPS Panel Touchscreen / 4K Ultra HD 3840x2160      2\n",
       "IPS Panel Full HD 2160x1440                        2\n",
       "IPS Panel Quad HD+ 3200x1800                       2\n",
       "IPS Panel Retina Display 2736x1824                 1\n",
       "IPS Panel Full HD 1920x1200                        1\n",
       "IPS Panel Full HD 2560x1440                        1\n",
       "IPS Panel Full HD 1366x768                         1\n",
       "Touchscreen / Full HD 1920x1080                    1\n",
       "Touchscreen / Quad HD+ 3200x1800                   1\n",
       "Touchscreen / 4K Ultra HD 3840x2160                1\n",
       "IPS Panel Touchscreen 2400x1600                    1\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['ScreenResolution'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "bf9fc5af-0e21-4e7a-99e1-75808a8747c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Touchscreen']=df['ScreenResolution'].apply(lambda x:1 if 'Touchscreen' in x else 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "152c08d8-4c08-4e13-babf-698701efe487",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>194</th>\n",
       "      <td>Dell</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Full HD / Touchscreen 1920x1080</td>\n",
       "      <td>Intel Core i7 8550U 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>1TB HDD</td>\n",
       "      <td>Intel UHD Graphics 620</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.62</td>\n",
       "      <td>44701.9200</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>14.0</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 8250U 1.6GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.63</td>\n",
       "      <td>45820.8000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>900</th>\n",
       "      <td>Dell</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>13.3</td>\n",
       "      <td>Quad HD+ / Touchscreen 3200x1800</td>\n",
       "      <td>Intel Core i7 7Y75 1.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>Intel HD Graphics 615</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.24</td>\n",
       "      <td>107257.9680</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>581</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Core i5 7300U 2.6GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>500GB HDD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.90</td>\n",
       "      <td>53733.9456</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>707</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Workstation</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>Nvidia Quadro M520M</td>\n",
       "      <td>Windows 7</td>\n",
       "      <td>2.18</td>\n",
       "      <td>98834.4000</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Company            TypeName  Inches  \\\n",
       "194    Dell  2 in 1 Convertible    13.3   \n",
       "82       HP            Notebook    14.0   \n",
       "900    Dell  2 in 1 Convertible    13.3   \n",
       "581    Dell            Notebook    15.6   \n",
       "707  Lenovo         Workstation    15.6   \n",
       "\n",
       "                              ScreenResolution                         Cpu  \\\n",
       "194  IPS Panel Full HD / Touchscreen 1920x1080  Intel Core i7 8550U 1.8GHz   \n",
       "82                           Full HD 1920x1080  Intel Core i5 8250U 1.6GHz   \n",
       "900           Quad HD+ / Touchscreen 3200x1800   Intel Core i7 7Y75 1.3GHz   \n",
       "581                                   1366x768  Intel Core i5 7300U 2.6GHz   \n",
       "707                          Full HD 1920x1080  Intel Core i7 6500U 2.5GHz   \n",
       "\n",
       "     Ram     Memory                     Gpu       OpSys  Weight        Price  \\\n",
       "194    8    1TB HDD  Intel UHD Graphics 620  Windows 10    1.62   44701.9200   \n",
       "82     8  256GB SSD   Intel HD Graphics 620  Windows 10    1.63   45820.8000   \n",
       "900    8  512GB SSD   Intel HD Graphics 615  Windows 10    1.24  107257.9680   \n",
       "581    8  500GB HDD   Intel HD Graphics 620  Windows 10    1.90   53733.9456   \n",
       "707   16  512GB SSD     Nvidia Quadro M520M   Windows 7    2.18   98834.4000   \n",
       "\n",
       "     Touchscreen  \n",
       "194            1  \n",
       "82             0  \n",
       "900            1  \n",
       "581            0  \n",
       "707            0  "
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "c38ec231-4ab5-4832-8707-753b82f62752",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Touchscreen'>"
      ]
     },
     "execution_count": 127,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Touchscreen'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "7f9e9da9-8cf0-4eff-8645-a6bd30085565",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Touchscreen', ylabel='Price'>"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.barplot(x=df['Touchscreen'],y=df['Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "a7d8294d-f0eb-44ea-8989-40cf7612066d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['IPS']=df['ScreenResolution'].apply(lambda x:1 if 'IPS' in x else 0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "31853fc5-6686-415d-a671-51dbdd58af57",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1179</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Core i3 6100U 2.3GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>500GB HDD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.07</td>\n",
       "      <td>34632.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>960</th>\n",
       "      <td>Toshiba</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 6300U 2.4GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.20</td>\n",
       "      <td>81784.8000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>549</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>IPS Panel Full HD 1920x1080</td>\n",
       "      <td>Intel Core i7 7500U 2.7GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.99</td>\n",
       "      <td>92121.1200</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1259</th>\n",
       "      <td>MSI</td>\n",
       "      <td>Gaming</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i7 6700HQ 2.6GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD +  1TB HDD</td>\n",
       "      <td>Nvidia GeForce GTX 960M</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.40</td>\n",
       "      <td>65481.1200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>746</th>\n",
       "      <td>Samsung</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i7 7500U 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>0.81</td>\n",
       "      <td>87858.7200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>948</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>17.3</td>\n",
       "      <td>1600x900</td>\n",
       "      <td>Intel Core i3 6006U 2.0GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>1TB HDD</td>\n",
       "      <td>AMD Radeon R7 M445</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.36</td>\n",
       "      <td>35111.5200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1094</th>\n",
       "      <td>HP</td>\n",
       "      <td>Netbook</td>\n",
       "      <td>12.5</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Core i5 6200U 2.3GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 7</td>\n",
       "      <td>2.40</td>\n",
       "      <td>85194.7200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>227</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Nvidia GeForce 920MX</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.00</td>\n",
       "      <td>40972.3200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1269</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Core i7 6500U 2.5GHz</td>\n",
       "      <td>4</td>\n",
       "      <td>500GB HDD</td>\n",
       "      <td>Nvidia GeForce 920M</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.20</td>\n",
       "      <td>38378.6496</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>866</th>\n",
       "      <td>Toshiba</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1366x768</td>\n",
       "      <td>Intel Core i5 6200U 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 520</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.20</td>\n",
       "      <td>58341.6000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Company   TypeName  Inches             ScreenResolution  \\\n",
       "1179       HP   Notebook    15.6                     1366x768   \n",
       "960   Toshiba   Notebook    13.3            Full HD 1920x1080   \n",
       "549    Lenovo   Notebook    15.6  IPS Panel Full HD 1920x1080   \n",
       "1259      MSI     Gaming    15.6            Full HD 1920x1080   \n",
       "746   Samsung  Ultrabook    13.3            Full HD 1920x1080   \n",
       "948      Dell   Notebook    17.3                     1600x900   \n",
       "1094       HP    Netbook    12.5                     1366x768   \n",
       "227      Asus   Notebook    15.6            Full HD 1920x1080   \n",
       "1269     Asus   Notebook    15.6                     1366x768   \n",
       "866   Toshiba  Ultrabook    13.3                     1366x768   \n",
       "\n",
       "                              Cpu  Ram                Memory  \\\n",
       "1179   Intel Core i3 6100U 2.3GHz    4             500GB HDD   \n",
       "960    Intel Core i5 6300U 2.4GHz    8             256GB SSD   \n",
       "549    Intel Core i7 7500U 2.7GHz    8             512GB SSD   \n",
       "1259  Intel Core i7 6700HQ 2.6GHz    8  128GB SSD +  1TB HDD   \n",
       "746    Intel Core i7 7500U 2.7GHz   16             256GB SSD   \n",
       "948    Intel Core i3 6006U 2.0GHz    4               1TB HDD   \n",
       "1094   Intel Core i5 6200U 2.3GHz    4             128GB SSD   \n",
       "227    Intel Core i5 7200U 2.5GHz    8             256GB SSD   \n",
       "1269   Intel Core i7 6500U 2.5GHz    4             500GB HDD   \n",
       "866    Intel Core i5 6200U 2.3GHz    8             256GB SSD   \n",
       "\n",
       "                          Gpu       OpSys  Weight       Price  Touchscreen  \\\n",
       "1179    Intel HD Graphics 520  Windows 10    2.07  34632.0000            0   \n",
       "960     Intel HD Graphics 520  Windows 10    1.20  81784.8000            0   \n",
       "549     Intel HD Graphics 620  Windows 10    1.99  92121.1200            0   \n",
       "1259  Nvidia GeForce GTX 960M  Windows 10    2.40  65481.1200            0   \n",
       "746     Intel HD Graphics 620  Windows 10    0.81  87858.7200            0   \n",
       "948        AMD Radeon R7 M445  Windows 10    2.36  35111.5200            0   \n",
       "1094    Intel HD Graphics 520   Windows 7    2.40  85194.7200            0   \n",
       "227     Nvidia GeForce 920MX   Windows 10    2.00  40972.3200            0   \n",
       "1269      Nvidia GeForce 920M  Windows 10    2.20  38378.6496            0   \n",
       "866     Intel HD Graphics 520  Windows 10    1.20  58341.6000            0   \n",
       "\n",
       "      IPS  \n",
       "1179    0  \n",
       "960     0  \n",
       "549     1  \n",
       "1259    0  \n",
       "746     0  \n",
       "948     0  \n",
       "1094    0  \n",
       "227     0  \n",
       "1269    0  \n",
       "866     0  "
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "23026571-85e2-4a17-a808-e4e7d9270f41",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='IPS'>"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['IPS'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "33d6d684-7e90-40cf-9aa9-451bc9fc89f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='IPS', ylabel='Price'>"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.barplot(x=df['IPS'],y=df['Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "8bc2c44c-f8dc-45b6-b84a-61332b9fb7e4",
   "metadata": {},
   "outputs": [],
   "source": [
    "new=df['ScreenResolution'].str.split('x',n=1,expand=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "168da74f-abc7-479e-a9a6-e6143971bb35",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['X_res']=new[0]\n",
    "df['Y_res']=new[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "485e4da6-0c81-40ad-a9f2-4d4b47241b70",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>IPS Panel Retina Display 2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Full HD 1920</td>\n",
       "      <td>1080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>IPS Panel Retina Display 2880</td>\n",
       "      <td>1800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>IPS Panel Retina Display 2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu  Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  IPS  \\\n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1   \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0   \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0   \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1   \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "                           X_res Y_res  \n",
       "0  IPS Panel Retina Display 2560  1600  \n",
       "1                           1440   900  \n",
       "2                   Full HD 1920  1080  \n",
       "3  IPS Panel Retina Display 2880  1800  \n",
       "4  IPS Panel Retina Display 2560  1600  "
      ]
     },
     "execution_count": 135,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "6f91dfdd-0409-4cee-9aa6-b1d24307512f",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['X_res']=df['X_res'].str.replace(',','').str.findall(r'(\\d+\\.?\\d+)').apply(lambda x:x[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "97828f22-30eb-4d6f-94f7-b04b711278b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu  Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  IPS  \\\n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1   \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0   \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0   \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1   \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "  X_res Y_res  \n",
       "0  2560  1600  \n",
       "1  1440   900  \n",
       "2  1920  1080  \n",
       "3  2880  1800  \n",
       "4  2560  1600  "
      ]
     },
     "execution_count": 137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "3e56cff0-166e-49c0-a763-22c847fefbef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu  Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  IPS  \\\n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1   \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0   \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0   \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1   \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "  X_res Y_res  \n",
       "0  2560  1600  \n",
       "1  1440   900  \n",
       "2  1920  1080  \n",
       "3  2880  1800  \n",
       "4  2560  1600  "
      ]
     },
     "execution_count": 138,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "5ab12f50-78cd-49e4-87c3-42f7269b44d4",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "\"['X_reso', 'Y_resoo'] not found in axis\"",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[139], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m df\u001b[38;5;241m.\u001b[39mdrop(columns\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mX_reso\u001b[39m\u001b[38;5;124m'\u001b[39m,\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mY_resoo\u001b[39m\u001b[38;5;124m'\u001b[39m],inplace\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m)\n",
      "File \u001b[1;32mC:\\ProgramData\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:5344\u001b[0m, in \u001b[0;36mDataFrame.drop\u001b[1;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[0;32m   5196\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdrop\u001b[39m(\n\u001b[0;32m   5197\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[0;32m   5198\u001b[0m     labels: IndexLabel \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   5205\u001b[0m     errors: IgnoreRaise \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[0;32m   5206\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m DataFrame \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   5207\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[0;32m   5208\u001b[0m \u001b[38;5;124;03m    Drop specified labels from rows or columns.\u001b[39;00m\n\u001b[0;32m   5209\u001b[0m \n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   5342\u001b[0m \u001b[38;5;124;03m            weight  1.0     0.8\u001b[39;00m\n\u001b[0;32m   5343\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m-> 5344\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28msuper\u001b[39m()\u001b[38;5;241m.\u001b[39mdrop(\n\u001b[0;32m   5345\u001b[0m         labels\u001b[38;5;241m=\u001b[39mlabels,\n\u001b[0;32m   5346\u001b[0m         axis\u001b[38;5;241m=\u001b[39maxis,\n\u001b[0;32m   5347\u001b[0m         index\u001b[38;5;241m=\u001b[39mindex,\n\u001b[0;32m   5348\u001b[0m         columns\u001b[38;5;241m=\u001b[39mcolumns,\n\u001b[0;32m   5349\u001b[0m         level\u001b[38;5;241m=\u001b[39mlevel,\n\u001b[0;32m   5350\u001b[0m         inplace\u001b[38;5;241m=\u001b[39minplace,\n\u001b[0;32m   5351\u001b[0m         errors\u001b[38;5;241m=\u001b[39merrors,\n\u001b[0;32m   5352\u001b[0m     )\n",
      "File \u001b[1;32mC:\\ProgramData\\anaconda3\\Lib\\site-packages\\pandas\\core\\generic.py:4711\u001b[0m, in \u001b[0;36mNDFrame.drop\u001b[1;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[0;32m   4709\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m axis, labels \u001b[38;5;129;01min\u001b[39;00m axes\u001b[38;5;241m.\u001b[39mitems():\n\u001b[0;32m   4710\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m labels \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m-> 4711\u001b[0m         obj \u001b[38;5;241m=\u001b[39m obj\u001b[38;5;241m.\u001b[39m_drop_axis(labels, axis, level\u001b[38;5;241m=\u001b[39mlevel, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[0;32m   4713\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m inplace:\n\u001b[0;32m   4714\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_update_inplace(obj)\n",
      "File \u001b[1;32mC:\\ProgramData\\anaconda3\\Lib\\site-packages\\pandas\\core\\generic.py:4753\u001b[0m, in \u001b[0;36mNDFrame._drop_axis\u001b[1;34m(self, labels, axis, level, errors, only_slice)\u001b[0m\n\u001b[0;32m   4751\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mdrop(labels, level\u001b[38;5;241m=\u001b[39mlevel, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[0;32m   4752\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 4753\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mdrop(labels, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[0;32m   4754\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mget_indexer(new_axis)\n\u001b[0;32m   4756\u001b[0m \u001b[38;5;66;03m# Case for non-unique axis\u001b[39;00m\n\u001b[0;32m   4757\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n",
      "File \u001b[1;32mC:\\ProgramData\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:7000\u001b[0m, in \u001b[0;36mIndex.drop\u001b[1;34m(self, labels, errors)\u001b[0m\n\u001b[0;32m   6998\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m mask\u001b[38;5;241m.\u001b[39many():\n\u001b[0;32m   6999\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errors \u001b[38;5;241m!=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mignore\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[1;32m-> 7000\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mlabels[mask]\u001b[38;5;241m.\u001b[39mtolist()\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m not found in axis\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m   7001\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m indexer[\u001b[38;5;241m~\u001b[39mmask]\n\u001b[0;32m   7002\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdelete(indexer)\n",
      "\u001b[1;31mKeyError\u001b[0m: \"['X_reso', 'Y_resoo'] not found in axis\""
     ]
    }
   ],
   "source": [
    "df.drop(columns=['X_reso','Y_resoo'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "739e342c-03c6-436e-9362-720dcad44de9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>ScreenResolution</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>1440x900</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Full HD 1920x1080</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>IPS Panel Retina Display 2880x1800</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>IPS Panel Retina Display 2560x1600</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                    ScreenResolution  \\\n",
       "0   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "1   Apple  Ultrabook    13.3                            1440x900   \n",
       "2      HP   Notebook    15.6                   Full HD 1920x1080   \n",
       "3   Apple  Ultrabook    15.4  IPS Panel Retina Display 2880x1800   \n",
       "4   Apple  Ultrabook    13.3  IPS Panel Retina Display 2560x1600   \n",
       "\n",
       "                          Cpu  Ram               Memory  \\\n",
       "0        Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1        Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2  Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3        Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4        Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  IPS  \\\n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1   \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0   \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0   \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1   \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "  X_res Y_res  \n",
       "0  2560  1600  \n",
       "1  1440   900  \n",
       "2  1920  1080  \n",
       "3  2880  1800  \n",
       "4  2560  1600  "
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "fd54bfdf-1a6d-432f-86a8-20550d9d28eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['X_res']= df['X_res'].astype('int')\n",
    "df['Y_res']= df['Y_res'].astype('int')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "420296dc-af3b-44de-8219-6a0a5660017a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1303 entries, 0 to 1302\n",
      "Data columns (total 15 columns):\n",
      " #   Column            Non-Null Count  Dtype  \n",
      "---  ------            --------------  -----  \n",
      " 0   Company           1303 non-null   object \n",
      " 1   TypeName          1303 non-null   object \n",
      " 2   Inches            1303 non-null   float64\n",
      " 3   ScreenResolution  1303 non-null   object \n",
      " 4   Cpu               1303 non-null   object \n",
      " 5   Ram               1303 non-null   int32  \n",
      " 6   Memory            1303 non-null   object \n",
      " 7   Gpu               1303 non-null   object \n",
      " 8   OpSys             1303 non-null   object \n",
      " 9   Weight            1303 non-null   float32\n",
      " 10  Price             1303 non-null   float64\n",
      " 11  Touchscreen       1303 non-null   int64  \n",
      " 12  IPS               1303 non-null   int64  \n",
      " 13  X_res             1303 non-null   int32  \n",
      " 14  Y_res             1303 non-null   int32  \n",
      "dtypes: float32(1), float64(2), int32(3), int64(2), object(7)\n",
      "memory usage: 132.5+ KB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "ed9558e0-5269-434e-ba2b-1d5249d8fca3",
   "metadata": {},
   "outputs": [],
   "source": [
    "numeric_columns = ['Inches', 'Ram', 'Weight', 'Price', 'Touchscreen', 'IPS', 'X_res', 'Y_res']\n",
    "numeric_df = df[numeric_columns]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "dea331b9-a41c-4f16-9407-a27def740c82",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Price          1.000000\n",
      "Ram            0.743007\n",
      "X_res          0.556529\n",
      "Y_res          0.552809\n",
      "IPS            0.252208\n",
      "Weight         0.210370\n",
      "Touchscreen    0.191226\n",
      "Inches         0.068197\n",
      "Name: Price, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "correlation = numeric_df.corr()['Price'].sort_values(ascending=False)\n",
    "print(correlation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "b51cd8e5-f3ef-4c10-b720-c63514a04f76",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['ppi']=(((df['X_res']**2)+(df['Y_res']**2))**0.5/df['Inches']).astype('float')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "9dc38f4f-aa48-4071-abf8-48bb71bfad11",
   "metadata": {},
   "outputs": [],
   "source": [
    "numeric_columns = ['Inches', 'Ram', 'Weight', 'Price', 'Touchscreen', 'IPS', 'X_res', 'Y_res','ppi']\n",
    "numeric_df = df[numeric_columns]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "24987bba-3dfc-44a7-82e5-8283ca85d436",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Price          1.000000\n",
      "Ram            0.743007\n",
      "X_res          0.556529\n",
      "Y_res          0.552809\n",
      "ppi            0.473487\n",
      "IPS            0.252208\n",
      "Weight         0.210370\n",
      "Touchscreen    0.191226\n",
      "Inches         0.068197\n",
      "Name: Price, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "correlation = numeric_df.corr()['Price'].sort_values(ascending=False)\n",
    "print(correlation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "e7ea2024-a83d-456c-b3c3-520470d311a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['ScreenResolution'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "338d35d9-1d4f-45f6-9cc9-4e0a9e3e58c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Inches</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>X_res</th>\n",
       "      <th>Y_res</th>\n",
       "      <th>ppi</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1440</td>\n",
       "      <td>900</td>\n",
       "      <td>127.677940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>15.6</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1920</td>\n",
       "      <td>1080</td>\n",
       "      <td>141.211998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>15.4</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2880</td>\n",
       "      <td>1800</td>\n",
       "      <td>220.534624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>13.3</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2560</td>\n",
       "      <td>1600</td>\n",
       "      <td>226.983005</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Inches                         Cpu  Ram  \\\n",
       "0   Apple  Ultrabook    13.3        Intel Core i5 2.3GHz    8   \n",
       "1   Apple  Ultrabook    13.3        Intel Core i5 1.8GHz    8   \n",
       "2      HP   Notebook    15.6  Intel Core i5 7200U 2.5GHz    8   \n",
       "3   Apple  Ultrabook    15.4        Intel Core i7 2.7GHz   16   \n",
       "4   Apple  Ultrabook    13.3        Intel Core i5 3.1GHz    8   \n",
       "\n",
       "                Memory                           Gpu  OpSys  Weight  \\\n",
       "0            128GB SSD  Intel Iris Plus Graphics 640  macOS    1.37   \n",
       "1  128GB Flash Storage        Intel HD Graphics 6000  macOS    1.34   \n",
       "2            256GB SSD         Intel HD Graphics 620  No OS    1.86   \n",
       "3            512GB SSD            AMD Radeon Pro 455  macOS    1.83   \n",
       "4            256GB SSD  Intel Iris Plus Graphics 650  macOS    1.37   \n",
       "\n",
       "         Price  Touchscreen  IPS  X_res  Y_res         ppi  \n",
       "0   71378.6832            0    1   2560   1600  226.983005  \n",
       "1   47895.5232            0    0   1440    900  127.677940  \n",
       "2   30636.0000            0    0   1920   1080  141.211998  \n",
       "3  135195.3360            0    1   2880   1800  220.534624  \n",
       "4   96095.8080            0    1   2560   1600  226.983005  "
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "3c843c07-2e19-4ab3-b725-3b2a7f90b830",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Inches','X_res','Y_res'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "fd01448b-f852-429c-aace-c62e0fa39cff",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName                         Cpu  Ram               Memory  \\\n",
       "0   Apple  Ultrabook        Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1   Apple  Ultrabook        Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2      HP   Notebook  Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3   Apple  Ultrabook        Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4   Apple  Ultrabook        Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  IPS  \\\n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1   \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0   \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0   \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1   \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "          ppi  \n",
       "0  226.983005  \n",
       "1  127.677940  \n",
       "2  141.211998  \n",
       "3  220.534624  \n",
       "4  226.983005  "
      ]
     },
     "execution_count": 151,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "2e5d58e4-d22c-4565-9f86-7e8b80f015db",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Cpu\n",
       "Intel Core i5 7200U 2.5GHz       190\n",
       "Intel Core i7 7700HQ 2.8GHz      146\n",
       "Intel Core i7 7500U 2.7GHz       134\n",
       "Intel Core i7 8550U 1.8GHz        73\n",
       "Intel Core i5 8250U 1.6GHz        72\n",
       "                                ... \n",
       "Intel Core M M3-6Y30 0.9GHz        1\n",
       "AMD A9-Series 9420 2.9GHz          1\n",
       "Intel Core i3 6006U 2.2GHz         1\n",
       "AMD A6-Series 7310 2GHz            1\n",
       "Intel Xeon E3-1535M v6 3.1GHz      1\n",
       "Name: count, Length: 118, dtype: int64"
      ]
     },
     "execution_count": 152,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Cpu'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "3b7ffc68-e8da-4c6e-acf9-34e0cc20e6ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Cpu Name']= df['Cpu'].apply(lambda x:\" \".join(x.split()[0:3]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "3d5cf1d5-085f-44c0-ae10-a7b3d219b92c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Name</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i5 2.3GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i5 1.8GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i7 2.7GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i5 3.1GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName                         Cpu  Ram               Memory  \\\n",
       "0   Apple  Ultrabook        Intel Core i5 2.3GHz    8            128GB SSD   \n",
       "1   Apple  Ultrabook        Intel Core i5 1.8GHz    8  128GB Flash Storage   \n",
       "2      HP   Notebook  Intel Core i5 7200U 2.5GHz    8            256GB SSD   \n",
       "3   Apple  Ultrabook        Intel Core i7 2.7GHz   16            512GB SSD   \n",
       "4   Apple  Ultrabook        Intel Core i5 3.1GHz    8            256GB SSD   \n",
       "\n",
       "                            Gpu  OpSys  Weight        Price  Touchscreen  IPS  \\\n",
       "0  Intel Iris Plus Graphics 640  macOS    1.37   71378.6832            0    1   \n",
       "1        Intel HD Graphics 6000  macOS    1.34   47895.5232            0    0   \n",
       "2         Intel HD Graphics 620  No OS    1.86   30636.0000            0    0   \n",
       "3            AMD Radeon Pro 455  macOS    1.83  135195.3360            0    1   \n",
       "4  Intel Iris Plus Graphics 650  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "          ppi       Cpu Name  \n",
       "0  226.983005  Intel Core i5  \n",
       "1  127.677940  Intel Core i5  \n",
       "2  141.211998  Intel Core i5  \n",
       "3  220.534624  Intel Core i7  \n",
       "4  226.983005  Intel Core i5  "
      ]
     },
     "execution_count": 154,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "40bd9b5b-818b-4c02-a161-c9c152676921",
   "metadata": {},
   "outputs": [],
   "source": [
    "def fetch_processor(text):\n",
    "    if text =='Intel Core i7' or text =='Intel Core i5' or text=='Intel Core i3':\n",
    "        return text\n",
    "    else:\n",
    "        if text.split()[0]=='Intel':\n",
    "            return 'Other Intel Processor'\n",
    "        else:\n",
    "            return 'AMD Processor'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "ed034dad-4f32-4b6b-a098-2726ae6d169d",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Cpu Brand']=df['Cpu Name'].apply(fetch_processor)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "ff63d58d-d9e5-46c0-85b2-9645241601fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Cpu</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Name</th>\n",
       "      <th>Cpu Brand</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>682</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Gaming</td>\n",
       "      <td>Intel Core i5 7300HQ 2.5GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>128GB SSD +  1TB HDD</td>\n",
       "      <td>Nvidia GeForce GTX 1060</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>3.21</td>\n",
       "      <td>109277.28</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>917</th>\n",
       "      <td>MSI</td>\n",
       "      <td>Gaming</td>\n",
       "      <td>Intel Core i7 7700HQ 2.8GHz</td>\n",
       "      <td>16</td>\n",
       "      <td>256GB SSD +  1TB HDD</td>\n",
       "      <td>Nvidia GeForce GTX 1050 Ti</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.70</td>\n",
       "      <td>85194.72</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.335675</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>Intel Core i7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>938</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>Intel Core i5 7200U 2.5GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>1.36</td>\n",
       "      <td>87325.92</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>157.350512</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1204</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Gaming</td>\n",
       "      <td>Intel Core i7 6700HQ 2.6GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>1TB HDD</td>\n",
       "      <td>Nvidia GeForce GTX 1060</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.20</td>\n",
       "      <td>62284.32</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>Intel Core i7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>Intel Core i7 7500U 2.7GHz</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>AMD Radeon R5 M430</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.20</td>\n",
       "      <td>39693.60</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>Intel Core i7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company   TypeName                          Cpu  Ram  \\\n",
       "682     Dell     Gaming  Intel Core i5 7300HQ 2.5GHz   16   \n",
       "917      MSI     Gaming  Intel Core i7 7700HQ 2.8GHz   16   \n",
       "938     Dell  Ultrabook   Intel Core i5 7200U 2.5GHz    8   \n",
       "1204    Asus     Gaming  Intel Core i7 6700HQ 2.6GHz    8   \n",
       "16      Dell   Notebook   Intel Core i7 7500U 2.7GHz    8   \n",
       "\n",
       "                    Memory                         Gpu       OpSys  Weight  \\\n",
       "682   128GB SSD +  1TB HDD     Nvidia GeForce GTX 1060  Windows 10    3.21   \n",
       "917   256GB SSD +  1TB HDD  Nvidia GeForce GTX 1050 Ti  Windows 10    2.70   \n",
       "938              256GB SSD       Intel HD Graphics 620  Windows 10    1.36   \n",
       "1204               1TB HDD     Nvidia GeForce GTX 1060  Windows 10    2.20   \n",
       "16               256GB SSD          AMD Radeon R5 M430  Windows 10    2.20   \n",
       "\n",
       "          Price  Touchscreen  IPS         ppi       Cpu Name      Cpu Brand  \n",
       "682   109277.28            0    0  141.211998  Intel Core i5  Intel Core i5  \n",
       "917    85194.72            0    0  127.335675  Intel Core i7  Intel Core i7  \n",
       "938    87325.92            0    0  157.350512  Intel Core i5  Intel Core i5  \n",
       "1204   62284.32            0    0  141.211998  Intel Core i7  Intel Core i7  \n",
       "16     39693.60            0    0  141.211998  Intel Core i7  Intel Core i7  "
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "c711296f-2caf-4dd7-af0e-13334ff3a140",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Cpu Brand'>"
      ]
     },
     "execution_count": 158,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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ubBDSEiIdu7cqdatW3ts37dvn6655hpOyjSAtWGH8524vH//fiUnJ9f7mxhSUAAYlZKSopSUFD377LMe20eNGqVt27Zpy5YthpIBZiUlJWnw4MF65JFHPLZPnTpVf//737Vr1y5DybyDq3gAGDV9+nT169dPa9asUefOneVyubR582YdOXJE77zzjul4gDGTJ0/Wrbfeqvfff1/XX3+9XC6XNm3apLVr1+rVV181Ha/OcQQFgHHHjh3Tc8895/FwuuHDh3Ore/i87du3a8aMGcrJyXGvjbFjx6pDhw6mo9U5CgoAYyorK9WrVy+98MILNc5BAXxZZWWlfv/73+vRRx/VFVdcYTqOEdwHBYAxgYGB2r17t0/dfAr4MQIDA7VixQrTMYziCEode/PNN3/02AEDBtRhEjAXdho7dqwCAwP11FNPmY7is1gbdrrnnnuUnJysMWPGmI5iBAWljvn5/biDVC6XS1VVVXWcxrcxF3YaNWqUFi1apFatWqlTp04KCwvz2M8TdOsea8NOTz75pP7617+qe/fu6tixY421MXr0aEPJvIOCAsCobt26nXefy+XSunXrvJgGsEd8fPx597lcLn3xxRdeTON9FBRDTp8+rZCQENMxIOYCOB/WBkziJFkvqqqq0hNPPKFLL71UDRs2dLffRx99VPPmzTOczrcwF3ZYvny5hgwZokGDBunFF180HQdibdjio48+0sSJE/XHP/5Rq1atMh3HCAqKFz355JPKysrS9OnTFRQU5N6enJysuXPnGkzme5gL81588UXdeuut+vjjj7Vv3z498MADmjBhgulYPo+1Yd6KFSt0/fXX65lnntELL7ygPn36KDMz03Qs7/Pqk3983JVXXumsWbPGcRzHadiwofP55587juM4OTk5TqNGjUxG8znMhXlJSUnOn/70J/f7BQsWOA0bNjSYCI7D2rBBp06dnLS0NKeystJxHMd54oknnKioKMOpvI8jKF705Zdf1njokyRVV1ersrLSQCLfxVyY98UXX+iee+5xvx86dKjKy8uVn59vMBVYG+bt27dP48ePV0DAt0+jeeihh3Ty5EkdP37ccDLvoqB4Udu2bbVx48Ya25cvX+4Tty22CXNhXllZmRo2bOh+7+/vr+DgYH3zzTcGU4G1YV5paakaNWrkfh8cHKzQ0FAVFxebC2UADwv0oscff1xD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i9PmzZv56gfwURQUAEakp6dr7dq1WrNmjaKjoz325efnq1evXurevbtmzpxpKCEAkygoAIxo2bKlXnjhBfXu3fuc+1euXKn777+fhwgCPopzUAAYkZeXp7Zt2553f1JSkvLz872YCIBNKCgAjGjatOn3Hh3Jzc3lih7Ah1FQABjx61//WhMnTlRFRUWNfeXl5Xr00Uf161//2kAyADbgHBQARhw9elSdOnVScHCwRowY4b6t/d69e/W3v/1N5eXl+vjjjxUXF2c4KQATKCgAjMnNzdXw4cO1atUq90MDXS6XevbsqdmzZ6tVq1aGEwIwhYICwLjCwkLt379fktSqVSs1adLEcCIAplFQAACAdThJFgAAWIeCAgAArENBAQAA1qGgAAAA61BQAOA83nvvPblcLp08edJ0FMDnUFAAuOXn52vUqFG64oorFBwcrLi4ON14441au3Ztnf/ZLVu2lMvlksvlkr+/v2JjY5WWlqbCwsI6/7MB2IeCAkCSdPDgQXXs2FHr1q3T9OnTtWvXLq1cuVLdunXTiBEjvJJhypQpysvL0+HDh/Xyyy/r/fff1+jRo887vqqqStXV1V7JBsC7KCgAJEnDhw+Xy+XS1q1b9dvf/latW7dW27ZtNWbMGG3ZssU9zuVyac6cOerTp49CQ0MVHx+v5cuXu/ef62uRHTt2yOVyfe/DASUpPDxcMTExuvTSS9WtWzfdeeed2r59u3t/VlaWGjVqpH/+859KTExUcHCwDh06pG3btqlnz55q2rSpIiMj1aVLF4+f+y733Llz9Zvf/EYNGjRQQkKC3nzzTY8x77zzjlq3bq3Q0FB169btB/MCqDsUFAA6ceKEVq5cqREjRigsLKzG/kaNGnm8f/TRR3XLLbfok08+0R133KHbb79dOTk5FzTTl19+qX/+859KSUnx2P7NN99o2rRpmjt3rvbs2aNmzZqppKREd911lzZu3KgtW7YoISFBffv2VUlJicfPTp48WYMGDdLOnTvVt29fDRkyRCdOnJAkHTlyRAMHDlTfvn21Y8cODRs2TA8//PAF/UwAasEB4PM++ugjR5Lz+uuv/+BYSc7999/vsS0lJcV54IEHHMdxnPXr1zuSnMLCQvf+f//7344kJzc397y/t0WLFk5QUJATFhbmhISEOJKclJQUj9+zYMECR5KzY8eO78145swZJzw83Hnrrbc8cv/pT39yvy8tLXVcLpfzr3/9y3Ecx5kwYYLTpk0bp7q62j3mj3/8Y43PAsA7OIICwONBfT9G586da7y/EEdQHnroIe3YsUM7d+50n5jbr18/VVVVuccEBQWpXbt2Hj9XUFCg+++/X61bt1ZkZKQiIyNVWlqqw4cPe4z7758LCwtTeHi4CgoKJEk5OTm67rrrPP4ZnP05AXgPBQWAEhIS5HK5flbJ+O4vdj+/b/+14vzXY74qKyt/1O9o2rSpWrVqpYSEBP3qV79SZmamNm/erPXr17vHhIaG1ihSd999t7Kzs93jd+zYoaioKFVUVHiMCwwMrJH5u5NsHR5LBliFggJATZo0Ue/evfXcc8/p1KlTNfaffR+Q/z5p9rv3V199tSTpkksukSTl5eW59+/YseMn5fL395cklZWVfe+4jRs3avTo0erbt6/atm2r4OBgHT9+vFZ/VmJi4jk/FwAzKCgAJEl/+9vfVFVVpWuvvVavvfaa9u/fr5ycHD377LM1vupYvny55s+fr88++0yPP/64tm7dqpEjR0qSWrVqpbi4OE2aNEmfffaZ3n77bT399NM/KkNJSYny8/OVl5enrVu36qGHHlLTpk2Vmpr6vT/XqlUrLV68WDk5Ofroo480ZMgQhYaG1urz33///fr88881ZswY7du3T0uXLlVWVlatfgeAC4eCAkCSFB8fr+3bt6tbt24aO3askpKS1LNnT61du1Zz5szxGDt58mQtW7ZM7dq108KFC/Xyyy8rMTFR0rdfo7zyyiv69NNP1b59e/35z3/W1KlTf1SGxx57TM2bN1dsbKz69++vsLAwrV69WlFRUd/7c/Pnz1dhYaE6dOigoUOHavTo0WrWrFmtPv/ll1+u1157TW+99Zbat2+v559/XhkZGbX6HQAuHJfDF68AasHlcmnFihW6+eabTUcBUI9xBAUAAFiHggIAAKwTYDoAgIsL3woD8AaOoAAAAOtQUAAAgHUoKAAAwDoUFAAAYB0KCgAAsA4FBQAAWIeCAgAArENBAQAA1vn/AFVaeEhxRMkJAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Cpu Brand'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "cbdca4ae-73fb-4365-b94e-8fb71a274909",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.barplot(x=df['Cpu Brand'],y=df['Price'])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "d6758dee-4ff3-4f68-9517-921c6dfdd1c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Cpu','Cpu Name'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "3e8eacf7-974a-4ebd-87ea-732a16ec0e1d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>128GB Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>512GB SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>256GB SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Ram               Memory                           Gpu  \\\n",
       "0   Apple  Ultrabook    8            128GB SSD  Intel Iris Plus Graphics 640   \n",
       "1   Apple  Ultrabook    8  128GB Flash Storage        Intel HD Graphics 6000   \n",
       "2      HP   Notebook    8            256GB SSD         Intel HD Graphics 620   \n",
       "3   Apple  Ultrabook   16            512GB SSD            AMD Radeon Pro 455   \n",
       "4   Apple  Ultrabook    8            256GB SSD  Intel Iris Plus Graphics 650   \n",
       "\n",
       "   OpSys  Weight        Price  Touchscreen  IPS         ppi      Cpu Brand  \n",
       "0  macOS    1.37   71378.6832            0    1  226.983005  Intel Core i5  \n",
       "1  macOS    1.34   47895.5232            0    0  127.677940  Intel Core i5  \n",
       "2  No OS    1.86   30636.0000            0    0  141.211998  Intel Core i5  \n",
       "3  macOS    1.83  135195.3360            0    1  220.534624  Intel Core i7  \n",
       "4  macOS    1.37   96095.8080            0    1  226.983005  Intel Core i5  "
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "8f22b4f8-6661-4d9b-b479-c6239414601a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Ram'>"
      ]
     },
     "execution_count": 162,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Ram'].value_counts().plot(kind='bar')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "3408ba8d-011b-4e73-98a3-a3ed62102431",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Ram', ylabel='Price'>"
      ]
     },
     "execution_count": 163,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.barplot(x=df['Ram'],y=df['Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "e75e9d4c-171d-432f-86e5-f2e859059b73",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Memory\n",
       "256GB SSD                        412\n",
       "1TB HDD                          223\n",
       "500GB HDD                        132\n",
       "512GB SSD                        118\n",
       "128GB SSD +  1TB HDD              94\n",
       "128GB SSD                         76\n",
       "256GB SSD +  1TB HDD              73\n",
       "32GB Flash Storage                38\n",
       "2TB HDD                           16\n",
       "64GB Flash Storage                15\n",
       "512GB SSD +  1TB HDD              14\n",
       "1TB SSD                           14\n",
       "256GB SSD +  2TB HDD              10\n",
       "1.0TB Hybrid                       9\n",
       "256GB Flash Storage                8\n",
       "16GB Flash Storage                 7\n",
       "32GB SSD                           6\n",
       "180GB SSD                          5\n",
       "128GB Flash Storage                4\n",
       "512GB SSD +  2TB HDD               3\n",
       "16GB SSD                           3\n",
       "512GB Flash Storage                2\n",
       "1TB SSD +  1TB HDD                 2\n",
       "256GB SSD +  500GB HDD             2\n",
       "128GB SSD +  2TB HDD               2\n",
       "256GB SSD +  256GB SSD             2\n",
       "512GB SSD +  256GB SSD             1\n",
       "512GB SSD +  512GB SSD             1\n",
       "64GB Flash Storage +  1TB HDD      1\n",
       "1TB HDD +  1TB HDD                 1\n",
       "32GB HDD                           1\n",
       "64GB SSD                           1\n",
       "128GB HDD                          1\n",
       "240GB SSD                          1\n",
       "8GB SSD                            1\n",
       "508GB Hybrid                       1\n",
       "1.0TB HDD                          1\n",
       "512GB SSD +  1.0TB Hybrid          1\n",
       "256GB SSD +  1.0TB Hybrid          1\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Memory'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "a8c23586-4b73-4559-8c1a-09a4e5e1c568",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Memory'] = df['Memory'].astype(str).replace('\\.0', '', regex=True)\n",
    "df[\"Memory\"] = df[\"Memory\"].str.replace('GB', '')\n",
    "df[\"Memory\"] = df[\"Memory\"].str.replace('TB', '000')\n",
    "new = df[\"Memory\"].str.split(\"+\", n=1, expand=True)\n",
    "\n",
    "df[\"first\"] = new[0]\n",
    "df[\"first\"] = df[\"first\"].str.strip()\n",
    "\n",
    "df[\"second\"] = new[1]\n",
    "\n",
    "df[\"Layer1HDD\"] = df[\"first\"].apply(lambda x: 1 if \"HDD\" in str(x) else 0)\n",
    "df[\"Layer1SSD\"] = df[\"first\"].apply(lambda x: 1 if \"SSD\" in str(x) else 0)\n",
    "df[\"Layer1Hybrid\"] = df[\"first\"].apply(lambda x: 1 if \"Hybrid\" in str(x) else 0)\n",
    "df[\"Layer1Flash_Storage\"] = df[\"first\"].apply(lambda x: 1 if \"Flash Storage\" in str(x) else 0)\n",
    "\n",
    "df['first'] = df['first'].str.extract('(\\d+)', expand=False).fillna('0')\n",
    "df['first'] = df['first'].astype(int)\n",
    "\n",
    "df[\"second\"].fillna(\"0\", inplace=True)\n",
    "\n",
    "df[\"Layer2HDD\"] = df[\"second\"].apply(lambda x: 1 if \"HDD\" in str(x) else 0)\n",
    "df[\"Layer2SSD\"] = df[\"second\"].apply(lambda x: 1 if \"SSD\" in str(x) else 0)\n",
    "df[\"Layer2Hybrid\"] = df[\"second\"].apply(lambda x: 1 if \"Hybrid\" in str(x) else 0)\n",
    "df[\"Layer2Flash_Storage\"] = df[\"second\"].apply(lambda x: 1 if \"Flash Storage\" in str(x) else 0)\n",
    "\n",
    "df['second'] = df['second'].str.extract('(\\d+)', expand=False).fillna('0')\n",
    "df['second'] = df['second'].astype(int)\n",
    "df[\"HDD\"]=(df[\"first\"]*df[\"Layer1HDD\"]+df[\"second\"]*df[\"Layer2HDD\"])\n",
    "df[\"SSD\"]=(df[\"first\"]*df[\"Layer1SSD\"]+df[\"second\"]*df[\"Layer2SSD\"])\n",
    "df[\"Hybrid\"]=(df[\"first\"]*df[\"Layer1Hybrid\"]+df[\"second\"]*df[\"Layer2Hybrid\"])\n",
    "df[\"Flash_Storage\"]=(df[\"first\"]*df[\"Layer1Flash_Storage\"]+df[\"second\"]*df[\"Layer2Flash_Storage\"])\n",
    "\n",
    "df.drop(columns=['first', 'second', 'Layer1HDD', 'Layer1SSD', 'Layer1Hybrid',\n",
    "       'Layer1Flash_Storage', 'Layer2HDD', 'Layer2SSD', 'Layer2Hybrid',\n",
    "       'Layer2Flash_Storage'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "2a971f9e-3b2d-410d-babd-c2b982d834a3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Hybrid</th>\n",
       "      <th>Flash_Storage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>128 SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>128 Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>256 SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>512 SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>256 SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Ram             Memory                           Gpu  \\\n",
       "0   Apple  Ultrabook    8            128 SSD  Intel Iris Plus Graphics 640   \n",
       "1   Apple  Ultrabook    8  128 Flash Storage        Intel HD Graphics 6000   \n",
       "2      HP   Notebook    8            256 SSD         Intel HD Graphics 620   \n",
       "3   Apple  Ultrabook   16            512 SSD            AMD Radeon Pro 455   \n",
       "4   Apple  Ultrabook    8            256 SSD  Intel Iris Plus Graphics 650   \n",
       "\n",
       "   OpSys  Weight        Price  Touchscreen  IPS         ppi      Cpu Brand  \\\n",
       "0  macOS    1.37   71378.6832            0    1  226.983005  Intel Core i5   \n",
       "1  macOS    1.34   47895.5232            0    0  127.677940  Intel Core i5   \n",
       "2  No OS    1.86   30636.0000            0    0  141.211998  Intel Core i5   \n",
       "3  macOS    1.83  135195.3360            0    1  220.534624  Intel Core i7   \n",
       "4  macOS    1.37   96095.8080            0    1  226.983005  Intel Core i5   \n",
       "\n",
       "   HDD  SSD  Hybrid  Flash_Storage  \n",
       "0    0  128       0              0  \n",
       "1    0    0       0            128  \n",
       "2    0  256       0              0  \n",
       "3    0  512       0              0  \n",
       "4    0  256       0              0  "
      ]
     },
     "execution_count": 166,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "83a3fd07-ba4c-4eca-9055-b87752c90ca3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Memory</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Hybrid</th>\n",
       "      <th>Flash_Storage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>128 SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>128 Flash Storage</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>256 SSD</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>512 SSD</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>256 SSD</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Ram             Memory                           Gpu  \\\n",
       "0   Apple  Ultrabook    8            128 SSD  Intel Iris Plus Graphics 640   \n",
       "1   Apple  Ultrabook    8  128 Flash Storage        Intel HD Graphics 6000   \n",
       "2      HP   Notebook    8            256 SSD         Intel HD Graphics 620   \n",
       "3   Apple  Ultrabook   16            512 SSD            AMD Radeon Pro 455   \n",
       "4   Apple  Ultrabook    8            256 SSD  Intel Iris Plus Graphics 650   \n",
       "\n",
       "   OpSys  Weight        Price  Touchscreen  IPS         ppi      Cpu Brand  \\\n",
       "0  macOS    1.37   71378.6832            0    1  226.983005  Intel Core i5   \n",
       "1  macOS    1.34   47895.5232            0    0  127.677940  Intel Core i5   \n",
       "2  No OS    1.86   30636.0000            0    0  141.211998  Intel Core i5   \n",
       "3  macOS    1.83  135195.3360            0    1  220.534624  Intel Core i7   \n",
       "4  macOS    1.37   96095.8080            0    1  226.983005  Intel Core i5   \n",
       "\n",
       "   HDD  SSD  Hybrid  Flash_Storage  \n",
       "0    0  128       0              0  \n",
       "1    0    0       0            128  \n",
       "2    0  256       0              0  \n",
       "3    0  512       0              0  \n",
       "4    0  256       0              0  "
      ]
     },
     "execution_count": 167,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "6fdb84ee-8f8b-42ee-b46b-178777f178a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Memory'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "27947e41-76c4-4721-9336-8521db1eef39",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Hybrid</th>\n",
       "      <th>Flash_Storage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Ram                           Gpu  OpSys  Weight  \\\n",
       "0   Apple  Ultrabook    8  Intel Iris Plus Graphics 640  macOS    1.37   \n",
       "1   Apple  Ultrabook    8        Intel HD Graphics 6000  macOS    1.34   \n",
       "2      HP   Notebook    8         Intel HD Graphics 620  No OS    1.86   \n",
       "3   Apple  Ultrabook   16            AMD Radeon Pro 455  macOS    1.83   \n",
       "4   Apple  Ultrabook    8  Intel Iris Plus Graphics 650  macOS    1.37   \n",
       "\n",
       "         Price  Touchscreen  IPS         ppi      Cpu Brand  HDD  SSD  Hybrid  \\\n",
       "0   71378.6832            0    1  226.983005  Intel Core i5    0  128       0   \n",
       "1   47895.5232            0    0  127.677940  Intel Core i5    0    0       0   \n",
       "2   30636.0000            0    0  141.211998  Intel Core i5    0  256       0   \n",
       "3  135195.3360            0    1  220.534624  Intel Core i7    0  512       0   \n",
       "4   96095.8080            0    1  226.983005  Intel Core i5    0  256       0   \n",
       "\n",
       "   Flash_Storage  \n",
       "0              0  \n",
       "1            128  \n",
       "2              0  \n",
       "3              0  \n",
       "4              0  "
      ]
     },
     "execution_count": 169,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "56fca25b-6bdc-40df-ae8d-8860ae0cbfac",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "could not convert string to float: 'Apple'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[170], line 1\u001b[0m\n\u001b[1;32m----> 1\u001b[0m df\u001b[38;5;241m.\u001b[39mcorr()[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mPrice\u001b[39m\u001b[38;5;124m'\u001b[39m]\n",
      "File \u001b[1;32mC:\\ProgramData\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:10704\u001b[0m, in \u001b[0;36mDataFrame.corr\u001b[1;34m(self, method, min_periods, numeric_only)\u001b[0m\n\u001b[0;32m  10702\u001b[0m cols \u001b[38;5;241m=\u001b[39m data\u001b[38;5;241m.\u001b[39mcolumns\n\u001b[0;32m  10703\u001b[0m idx \u001b[38;5;241m=\u001b[39m cols\u001b[38;5;241m.\u001b[39mcopy()\n\u001b[1;32m> 10704\u001b[0m mat \u001b[38;5;241m=\u001b[39m data\u001b[38;5;241m.\u001b[39mto_numpy(dtype\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mfloat\u001b[39m, na_value\u001b[38;5;241m=\u001b[39mnp\u001b[38;5;241m.\u001b[39mnan, copy\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m)\n\u001b[0;32m  10706\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m method \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpearson\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[0;32m  10707\u001b[0m     correl \u001b[38;5;241m=\u001b[39m libalgos\u001b[38;5;241m.\u001b[39mnancorr(mat, minp\u001b[38;5;241m=\u001b[39mmin_periods)\n",
      "File \u001b[1;32mC:\\ProgramData\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:1889\u001b[0m, in \u001b[0;36mDataFrame.to_numpy\u001b[1;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[0;32m   1887\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m dtype \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1888\u001b[0m     dtype \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mdtype(dtype)\n\u001b[1;32m-> 1889\u001b[0m result \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_mgr\u001b[38;5;241m.\u001b[39mas_array(dtype\u001b[38;5;241m=\u001b[39mdtype, copy\u001b[38;5;241m=\u001b[39mcopy, na_value\u001b[38;5;241m=\u001b[39mna_value)\n\u001b[0;32m   1890\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m result\u001b[38;5;241m.\u001b[39mdtype \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m dtype:\n\u001b[0;32m   1891\u001b[0m     result \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39marray(result, dtype\u001b[38;5;241m=\u001b[39mdtype, copy\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m)\n",
      "File \u001b[1;32mC:\\ProgramData\\anaconda3\\Lib\\site-packages\\pandas\\core\\internals\\managers.py:1656\u001b[0m, in \u001b[0;36mBlockManager.as_array\u001b[1;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[0;32m   1654\u001b[0m         arr\u001b[38;5;241m.\u001b[39mflags\u001b[38;5;241m.\u001b[39mwriteable \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[0;32m   1655\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m-> 1656\u001b[0m     arr \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_interleave(dtype\u001b[38;5;241m=\u001b[39mdtype, na_value\u001b[38;5;241m=\u001b[39mna_value)\n\u001b[0;32m   1657\u001b[0m     \u001b[38;5;66;03m# The underlying data was copied within _interleave, so no need\u001b[39;00m\n\u001b[0;32m   1658\u001b[0m     \u001b[38;5;66;03m# to further copy if copy=True or setting na_value\u001b[39;00m\n\u001b[0;32m   1660\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m na_value \u001b[38;5;129;01mis\u001b[39;00m lib\u001b[38;5;241m.\u001b[39mno_default:\n",
      "File \u001b[1;32mC:\\ProgramData\\anaconda3\\Lib\\site-packages\\pandas\\core\\internals\\managers.py:1715\u001b[0m, in \u001b[0;36mBlockManager._interleave\u001b[1;34m(self, dtype, na_value)\u001b[0m\n\u001b[0;32m   1713\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m   1714\u001b[0m         arr \u001b[38;5;241m=\u001b[39m blk\u001b[38;5;241m.\u001b[39mget_values(dtype)\n\u001b[1;32m-> 1715\u001b[0m     result[rl\u001b[38;5;241m.\u001b[39mindexer] \u001b[38;5;241m=\u001b[39m arr\n\u001b[0;32m   1716\u001b[0m     itemmask[rl\u001b[38;5;241m.\u001b[39mindexer] \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m1\u001b[39m\n\u001b[0;32m   1718\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m itemmask\u001b[38;5;241m.\u001b[39mall():\n",
      "\u001b[1;31mValueError\u001b[0m: could not convert string to float: 'Apple'"
     ]
    }
   ],
   "source": [
    "df.corr()['Price']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "817c10da-5436-4f73-81fb-b462395319a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "numeric_columns = ['Ram', 'Weight', 'Price', 'Touchscreen', 'IPS','ppi','HDD','SSD','Hybrid','Flash_Storage']\n",
    "numeric_df = df[numeric_columns]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "d31167c0-a10d-4b02-85e2-bc48ef27c1f8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Price            1.000000\n",
      "Ram              0.743007\n",
      "SSD              0.670799\n",
      "ppi              0.473487\n",
      "IPS              0.252208\n",
      "Weight           0.210370\n",
      "Touchscreen      0.191226\n",
      "Hybrid           0.007989\n",
      "Flash_Storage   -0.040511\n",
      "HDD             -0.096441\n",
      "Name: Price, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "correlation = numeric_df.corr()['Price'].sort_values(ascending=False)\n",
    "print(correlation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "c6fa34f8-0920-4aeb-a104-0f202526f1ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(columns=['Hybrid','Flash_Storage'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "02c5d49e-ce88-4a22-8b93-0b74adf1e17b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Ram                           Gpu  OpSys  Weight  \\\n",
       "0   Apple  Ultrabook    8  Intel Iris Plus Graphics 640  macOS    1.37   \n",
       "1   Apple  Ultrabook    8        Intel HD Graphics 6000  macOS    1.34   \n",
       "2      HP   Notebook    8         Intel HD Graphics 620  No OS    1.86   \n",
       "3   Apple  Ultrabook   16            AMD Radeon Pro 455  macOS    1.83   \n",
       "4   Apple  Ultrabook    8  Intel Iris Plus Graphics 650  macOS    1.37   \n",
       "\n",
       "         Price  Touchscreen  IPS         ppi      Cpu Brand  HDD  SSD  \n",
       "0   71378.6832            0    1  226.983005  Intel Core i5    0  128  \n",
       "1   47895.5232            0    0  127.677940  Intel Core i5    0    0  \n",
       "2   30636.0000            0    0  141.211998  Intel Core i5    0  256  \n",
       "3  135195.3360            0    1  220.534624  Intel Core i7    0  512  \n",
       "4   96095.8080            0    1  226.983005  Intel Core i5    0  256  "
      ]
     },
     "execution_count": 174,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "148c4ac4-9abc-4ac1-8cce-94c5355baf7b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gpu\n",
       "Intel HD Graphics 620      281\n",
       "Intel HD Graphics 520      185\n",
       "Intel UHD Graphics 620      68\n",
       "Nvidia GeForce GTX 1050     66\n",
       "Nvidia GeForce GTX 1060     48\n",
       "                          ... \n",
       "AMD Radeon R5 520            1\n",
       "AMD Radeon R7                1\n",
       "Intel HD Graphics 540        1\n",
       "AMD Radeon 540               1\n",
       "ARM Mali T860 MP4            1\n",
       "Name: count, Length: 110, dtype: int64"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Gpu'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "282d1e3c-1e3e-435b-ba54-3705567cba74",
   "metadata": {},
   "outputs": [],
   "source": [
    "df['Gpu Brand']=df['Gpu'].apply(lambda x:x.split()[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "fdb9b96a-c639-4178-98ec-535f754bb8ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Gpu</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu Brand</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 640</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 6000</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel HD Graphics 620</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>AMD Radeon Pro 455</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>AMD</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>Intel Iris Plus Graphics 650</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Ram                           Gpu  OpSys  Weight  \\\n",
       "0   Apple  Ultrabook    8  Intel Iris Plus Graphics 640  macOS    1.37   \n",
       "1   Apple  Ultrabook    8        Intel HD Graphics 6000  macOS    1.34   \n",
       "2      HP   Notebook    8         Intel HD Graphics 620  No OS    1.86   \n",
       "3   Apple  Ultrabook   16            AMD Radeon Pro 455  macOS    1.83   \n",
       "4   Apple  Ultrabook    8  Intel Iris Plus Graphics 650  macOS    1.37   \n",
       "\n",
       "         Price  Touchscreen  IPS         ppi      Cpu Brand  HDD  SSD  \\\n",
       "0   71378.6832            0    1  226.983005  Intel Core i5    0  128   \n",
       "1   47895.5232            0    0  127.677940  Intel Core i5    0    0   \n",
       "2   30636.0000            0    0  141.211998  Intel Core i5    0  256   \n",
       "3  135195.3360            0    1  220.534624  Intel Core i7    0  512   \n",
       "4   96095.8080            0    1  226.983005  Intel Core i5    0  256   \n",
       "\n",
       "  Gpu Brand  \n",
       "0     Intel  \n",
       "1     Intel  \n",
       "2     Intel  \n",
       "3       AMD  \n",
       "4     Intel  "
      ]
     },
     "execution_count": 177,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "2f335e01-f5a9-4959-a591-1020ae87d18f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Gpu Brand\n",
       "Intel     722\n",
       "Nvidia    400\n",
       "AMD       180\n",
       "ARM         1\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 178,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Gpu Brand'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "748219cb-efc1-4156-bc78-7befde9cf937",
   "metadata": {},
   "outputs": [],
   "source": [
    "df=df[df['Gpu Brand']!='ARM']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "da3f3afc-680a-4da0-a519-1e05e82dc918",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.barplot(x=df['Gpu Brand'],y=df['Price'])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "d910ce40-0187-49f4-a524-633ebcefd380",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\sanya\\AppData\\Local\\Temp\\ipykernel_9700\\1111925144.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df.drop(columns=['Gpu'],inplace=True)\n"
     ]
    }
   ],
   "source": [
    "df.drop(columns=['Gpu'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "5c881653-b93e-45c1-9a27-6e0acc2c7b7b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu Brand</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>618</th>\n",
       "      <td>MSI</td>\n",
       "      <td>Gaming</td>\n",
       "      <td>16</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.94</td>\n",
       "      <td>120831.5808</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>1000</td>\n",
       "      <td>256</td>\n",
       "      <td>Nvidia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>16</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.50</td>\n",
       "      <td>67718.8800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.335675</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>Nvidia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>134</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.05</td>\n",
       "      <td>31861.4400</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>564</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>Windows 10</td>\n",
       "      <td>2.50</td>\n",
       "      <td>44701.9200</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>1000</td>\n",
       "      <td>128</td>\n",
       "      <td>Nvidia</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Company  TypeName  Ram       OpSys  Weight        Price  Touchscreen  IPS  \\\n",
       "618     MSI    Gaming   16  Windows 10    2.94  120831.5808            0    0   \n",
       "123      HP  Notebook   16  Windows 10    2.50   67718.8800            0    0   \n",
       "2        HP  Notebook    8       No OS    1.86   30636.0000            0    0   \n",
       "134      HP  Notebook    8  Windows 10    2.05   31861.4400            0    0   \n",
       "564    Asus  Notebook    8  Windows 10    2.50   44701.9200            0    0   \n",
       "\n",
       "            ppi      Cpu Brand   HDD  SSD Gpu Brand  \n",
       "618  141.211998  Intel Core i7  1000  256    Nvidia  \n",
       "123  127.335675  Intel Core i7     0  512    Nvidia  \n",
       "2    141.211998  Intel Core i5     0  256     Intel  \n",
       "134  100.454670  Intel Core i7  1000    0     Intel  \n",
       "564  141.211998  Intel Core i5  1000  128    Nvidia  "
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "e7152e20-50b1-4079-84cc-f53b862797ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "OpSys\n",
       "Windows 10      1072\n",
       "No OS             66\n",
       "Linux             62\n",
       "Windows 7         45\n",
       "Chrome OS         26\n",
       "macOS             13\n",
       "Mac OS X           8\n",
       "Windows 10 S       8\n",
       "Android            2\n",
       "Name: count, dtype: int64"
      ]
     },
     "execution_count": 183,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['OpSys'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "f7f1e6cc-a600-49c5-bcbf-56633006e19f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function matplotlib.pyplot.show(close=None, block=None)>"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.barplot(x=df['OpSys'],y=df['Price'])\n",
    "plt.xticks(rotation='vertical')\n",
    "plt.show"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "8a3a78a4-d007-422e-b343-c2dac722f04c",
   "metadata": {},
   "outputs": [],
   "source": [
    "def cat_os(inp):\n",
    "    if inp=='Windows 10' or inp=='Windows 7' or inp=='Windows 10 S':\n",
    "        return 'Windows'\n",
    "    elif inp =='macOS' or inp=='Mac OS X':\n",
    "        return 'Mac'\n",
    "    else:\n",
    "        return 'Other/No OS/Linnux'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "144ff359-5c4e-4270-93b0-dcb961961862",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\sanya\\AppData\\Local\\Temp\\ipykernel_9700\\3255695950.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df['os']=df['OpSys'].apply(cat_os)\n"
     ]
    }
   ],
   "source": [
    "df['os']=df['OpSys'].apply(cat_os)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "0498ae9e-9918-43d6-be3d-0f830cc80353",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>OpSys</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu Brand</th>\n",
       "      <th>os</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>No OS</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Other/No OS/Linnux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>macOS</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Ram  OpSys  Weight        Price  Touchscreen  IPS  \\\n",
       "0   Apple  Ultrabook    8  macOS    1.37   71378.6832            0    1   \n",
       "1   Apple  Ultrabook    8  macOS    1.34   47895.5232            0    0   \n",
       "2      HP   Notebook    8  No OS    1.86   30636.0000            0    0   \n",
       "3   Apple  Ultrabook   16  macOS    1.83  135195.3360            0    1   \n",
       "4   Apple  Ultrabook    8  macOS    1.37   96095.8080            0    1   \n",
       "\n",
       "          ppi      Cpu Brand  HDD  SSD Gpu Brand                  os  \n",
       "0  226.983005  Intel Core i5    0  128     Intel                 Mac  \n",
       "1  127.677940  Intel Core i5    0    0     Intel                 Mac  \n",
       "2  141.211998  Intel Core i5    0  256     Intel  Other/No OS/Linnux  \n",
       "3  220.534624  Intel Core i7    0  512       AMD                 Mac  \n",
       "4  226.983005  Intel Core i5    0  256     Intel                 Mac  "
      ]
     },
     "execution_count": 187,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "7d22a5e8-d280-4023-a783-d5e2fdfe126a",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\sanya\\AppData\\Local\\Temp\\ipykernel_9700\\3105339334.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df.drop(columns=['OpSys'],inplace=True)\n"
     ]
    }
   ],
   "source": [
    "df.drop(columns=['OpSys'],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "4aa97161-1b82-4971-9873-850b3f2b1bdf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu Brand</th>\n",
       "      <th>os</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.37</td>\n",
       "      <td>71378.6832</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.34</td>\n",
       "      <td>47895.5232</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.86</td>\n",
       "      <td>30636.0000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Other/No OS/Linnux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>1.83</td>\n",
       "      <td>135195.3360</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.37</td>\n",
       "      <td>96095.8080</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Company   TypeName  Ram  Weight        Price  Touchscreen  IPS         ppi  \\\n",
       "0   Apple  Ultrabook    8    1.37   71378.6832            0    1  226.983005   \n",
       "1   Apple  Ultrabook    8    1.34   47895.5232            0    0  127.677940   \n",
       "2      HP   Notebook    8    1.86   30636.0000            0    0  141.211998   \n",
       "3   Apple  Ultrabook   16    1.83  135195.3360            0    1  220.534624   \n",
       "4   Apple  Ultrabook    8    1.37   96095.8080            0    1  226.983005   \n",
       "\n",
       "       Cpu Brand  HDD  SSD Gpu Brand                  os  \n",
       "0  Intel Core i5    0  128     Intel                 Mac  \n",
       "1  Intel Core i5    0    0     Intel                 Mac  \n",
       "2  Intel Core i5    0  256     Intel  Other/No OS/Linnux  \n",
       "3  Intel Core i7    0  512       AMD                 Mac  \n",
       "4  Intel Core i5    0  256     Intel                 Mac  "
      ]
     },
     "execution_count": 189,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "13164245-5964-4450-b916-f43d27c76489",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='os', ylabel='Price'>"
      ]
     },
     "execution_count": 190,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.barplot(x=df['os'],y=df['Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "300be635-87dc-479a-9b2a-dbed14efe07e",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\sanya\\AppData\\Local\\Temp\\ipykernel_9700\\3395422923.py:1: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sb.distplot(df['Weight'])\n",
      "C:\\ProgramData\\anaconda3\\Lib\\site-packages\\seaborn\\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Weight', ylabel='Density'>"
      ]
     },
     "execution_count": 191,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.distplot(df['Weight'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "0226f644-f82c-44ad-8d64-2be81f11a2fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Price          1.000000\n",
      "Ram            0.742905\n",
      "SSD            0.670660\n",
      "ppi            0.475368\n",
      "IPS            0.253320\n",
      "Weight         0.209867\n",
      "Touchscreen    0.192917\n",
      "HDD           -0.096891\n",
      "Name: Price, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "numeric_columns = ['Ram', 'Weight', 'Price', 'Touchscreen', 'IPS','ppi','HDD','SSD',]\n",
    "numeric_df = df[numeric_columns]\n",
    "correlation = numeric_df.corr()['Price'].sort_values(ascending=False)\n",
    "print(correlation)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "566308e1-a65a-41f8-beec-58757913dcc4",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\sanya\\AppData\\Local\\Temp\\ipykernel_9700\\2165143731.py:1: UserWarning: \n",
      "\n",
      "`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n",
      "\n",
      "Please adapt your code to use either `displot` (a figure-level function with\n",
      "similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "\n",
      "For a guide to updating your code to use the new functions, please see\n",
      "https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n",
      "\n",
      "  sb.distplot(np.log(df['Price']))\n",
      "C:\\ProgramData\\anaconda3\\Lib\\site-packages\\seaborn\\_oldcore.py:1119: FutureWarning: use_inf_as_na option is deprecated and will be removed in a future version. Convert inf values to NaN before operating instead.\n",
      "  with pd.option_context('mode.use_inf_as_na', True):\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='Price', ylabel='Density'>"
      ]
     },
     "execution_count": 193,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.distplot(np.log(df['Price']))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "8b7339a7-5aa9-405e-afe4-6b42d16898c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "x=df.drop(columns=['Price'])\n",
    "y=np.log(df['Price'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "id": "7fe510ea-49c2-4786-b2db-8d74d7d56e5f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu Brand</th>\n",
       "      <th>os</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.37</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.34</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>127.677940</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.86</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Other/No OS/Linnux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>1.83</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>220.534624</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.37</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.983005</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1298</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>4</td>\n",
       "      <td>1.80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>157.350512</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1299</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>16</td>\n",
       "      <td>1.30</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>276.053530</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1300</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>2</td>\n",
       "      <td>1.50</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>111.935204</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1301</th>\n",
       "      <td>HP</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>6</td>\n",
       "      <td>2.19</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1302</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1302 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company            TypeName  Ram  Weight  Touchscreen  IPS         ppi  \\\n",
       "0      Apple           Ultrabook    8    1.37            0    1  226.983005   \n",
       "1      Apple           Ultrabook    8    1.34            0    0  127.677940   \n",
       "2         HP            Notebook    8    1.86            0    0  141.211998   \n",
       "3      Apple           Ultrabook   16    1.83            0    1  220.534624   \n",
       "4      Apple           Ultrabook    8    1.37            0    1  226.983005   \n",
       "...      ...                 ...  ...     ...          ...  ...         ...   \n",
       "1298  Lenovo  2 in 1 Convertible    4    1.80            1    1  157.350512   \n",
       "1299  Lenovo  2 in 1 Convertible   16    1.30            1    1  276.053530   \n",
       "1300  Lenovo            Notebook    2    1.50            0    0  111.935204   \n",
       "1301      HP            Notebook    6    2.19            0    0  100.454670   \n",
       "1302    Asus            Notebook    4    2.20            0    0  100.454670   \n",
       "\n",
       "                  Cpu Brand   HDD  SSD Gpu Brand                  os  \n",
       "0             Intel Core i5     0  128     Intel                 Mac  \n",
       "1             Intel Core i5     0    0     Intel                 Mac  \n",
       "2             Intel Core i5     0  256     Intel  Other/No OS/Linnux  \n",
       "3             Intel Core i7     0  512       AMD                 Mac  \n",
       "4             Intel Core i5     0  256     Intel                 Mac  \n",
       "...                     ...   ...  ...       ...                 ...  \n",
       "1298          Intel Core i7     0  128     Intel             Windows  \n",
       "1299          Intel Core i7     0  512     Intel             Windows  \n",
       "1300  Other Intel Processor     0    0     Intel             Windows  \n",
       "1301          Intel Core i7  1000    0       AMD             Windows  \n",
       "1302  Other Intel Processor   500    0     Intel             Windows  \n",
       "\n",
       "[1302 rows x 12 columns]"
      ]
     },
     "execution_count": 195,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 196,
   "id": "0bcb838f-6f59-4aa6-84ad-50175c90797f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       11.175755\n",
       "1       10.776777\n",
       "2       10.329931\n",
       "3       11.814476\n",
       "4       11.473101\n",
       "          ...    \n",
       "1298    10.433899\n",
       "1299    11.288115\n",
       "1300     9.409283\n",
       "1301    10.614129\n",
       "1302     9.886358\n",
       "Name: Price, Length: 1302, dtype: float64"
      ]
     },
     "execution_count": 196,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 197,
   "id": "07c2134b-03ab-4a2c-b1db-c57e40729b36",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.15,random_state=2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 198,
   "id": "eda4b775-c1df-48b9-b2c1-9248725ada22",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu Brand</th>\n",
       "      <th>os</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>183</th>\n",
       "      <td>Toshiba</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>128</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1141</th>\n",
       "      <td>MSI</td>\n",
       "      <td>Gaming</td>\n",
       "      <td>8</td>\n",
       "      <td>2.40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>1000</td>\n",
       "      <td>128</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1049</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Netbook</td>\n",
       "      <td>4</td>\n",
       "      <td>1.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>135.094211</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Other/No OS/Linnux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1020</th>\n",
       "      <td>Dell</td>\n",
       "      <td>2 in 1 Convertible</td>\n",
       "      <td>4</td>\n",
       "      <td>2.08</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i3</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>878</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.18</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>1000</td>\n",
       "      <td>128</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>466</th>\n",
       "      <td>Acer</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i3</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>299</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>16</td>\n",
       "      <td>1.63</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>0</td>\n",
       "      <td>512</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>493</th>\n",
       "      <td>Acer</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>AMD Processor</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>527</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>2.20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Intel Core i3</td>\n",
       "      <td>2000</td>\n",
       "      <td>0</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Other/No OS/Linnux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1193</th>\n",
       "      <td>Apple</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>226.415547</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Mac</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1106 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Company            TypeName  Ram  Weight  Touchscreen  IPS         ppi  \\\n",
       "183   Toshiba            Notebook    8    2.00            0    0  100.454670   \n",
       "1141      MSI              Gaming    8    2.40            0    0  141.211998   \n",
       "1049     Asus             Netbook    4    1.20            0    0  135.094211   \n",
       "1020     Dell  2 in 1 Convertible    4    2.08            1    1  141.211998   \n",
       "878      Dell            Notebook    4    2.18            0    0  141.211998   \n",
       "...       ...                 ...  ...     ...          ...  ...         ...   \n",
       "466      Acer            Notebook    4    2.20            0    0  100.454670   \n",
       "299      Asus           Ultrabook   16    1.63            0    0  141.211998   \n",
       "493      Acer            Notebook    8    2.20            0    0  100.454670   \n",
       "527    Lenovo            Notebook    8    2.20            0    0  100.454670   \n",
       "1193    Apple           Ultrabook    8    0.92            0    1  226.415547   \n",
       "\n",
       "                  Cpu Brand   HDD  SSD Gpu Brand                  os  \n",
       "183           Intel Core i5     0  128     Intel             Windows  \n",
       "1141          Intel Core i7  1000  128    Nvidia             Windows  \n",
       "1049  Other Intel Processor     0    0     Intel  Other/No OS/Linnux  \n",
       "1020          Intel Core i3  1000    0     Intel             Windows  \n",
       "878           Intel Core i5  1000  128    Nvidia             Windows  \n",
       "...                     ...   ...  ...       ...                 ...  \n",
       "466           Intel Core i3   500    0    Nvidia             Windows  \n",
       "299           Intel Core i7     0  512    Nvidia             Windows  \n",
       "493           AMD Processor  1000    0       AMD             Windows  \n",
       "527           Intel Core i3  2000    0    Nvidia  Other/No OS/Linnux  \n",
       "1193  Other Intel Processor     0    0     Intel                 Mac  \n",
       "\n",
       "[1106 rows x 12 columns]"
      ]
     },
     "execution_count": 198,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 199,
   "id": "c7f6cfa7-e685-4707-bf41-51ab0f43fb04",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Defaulting to user installation because normal site-packages is not writeable\n",
      "Requirement already satisfied: xgboost in c:\\programdata\\anaconda3\\lib\\site-packages (1.5.0)\n",
      "Requirement already satisfied: numpy in c:\\programdata\\anaconda3\\lib\\site-packages (from xgboost) (1.26.4)\n",
      "Requirement already satisfied: scipy in c:\\programdata\\anaconda3\\lib\\site-packages (from xgboost) (1.11.4)\n",
      "Note: you may need to restart the kernel to use updated packages.\n"
     ]
    }
   ],
   "source": [
    "pip install xgboost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 207,
   "id": "197f8f14-bebf-430d-8fb4-b51a7a234a7b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.compose import ColumnTransformer\n",
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.preprocessing import OneHotEncoder\n",
    "from sklearn.metrics import r2_score,mean_absolute_error\n",
    "from sklearn.ensemble import RandomForestRegressor"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "id": "632e5c8f-4e54-432d-b59d-e2e72cf028dc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "R2 score 0.8873402378382488\n",
      "MAE 0.15860130110457718\n"
     ]
    }
   ],
   "source": [
    "step1 = ColumnTransformer(transformers=[\n",
    "    ('col_tnf',OneHotEncoder(drop='first'),[0,1,7,10,11])\n",
    "],remainder='passthrough')\n",
    "\n",
    "step2 = RandomForestRegressor(n_estimators=100,\n",
    "                              random_state=3,\n",
    "                              max_samples=0.5,\n",
    "                              max_features=0.75,\n",
    "                              max_depth=15)\n",
    "\n",
    "pipe = Pipeline([\n",
    "    ('step1',step1),\n",
    "    ('step2',step2)\n",
    "])\n",
    "\n",
    "pipe.fit(x_train,y_train)\n",
    "\n",
    "y_pred = pipe.predict(x_test)\n",
    "\n",
    "print('R2 score',r2_score(y_test,y_pred))\n",
    "print('MAE',mean_absolute_error(y_test,y_pred))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "id": "b618c197-a724-42c3-ae31-b34e9fa7824f",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pickle\n",
    "pickle.dump(df,open('df.pkl','wb'))\n",
    "pickle.dump(pipe,open('pipe.pkl','wb'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "id": "3da995b2-a891-4e72-8812-8e5947c512a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Company</th>\n",
       "      <th>TypeName</th>\n",
       "      <th>Ram</th>\n",
       "      <th>Weight</th>\n",
       "      <th>Price</th>\n",
       "      <th>Touchscreen</th>\n",
       "      <th>IPS</th>\n",
       "      <th>ppi</th>\n",
       "      <th>Cpu Brand</th>\n",
       "      <th>HDD</th>\n",
       "      <th>SSD</th>\n",
       "      <th>Gpu Brand</th>\n",
       "      <th>os</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>Dell</td>\n",
       "      <td>Gaming</td>\n",
       "      <td>8</td>\n",
       "      <td>2.65</td>\n",
       "      <td>63669.6000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>379</th>\n",
       "      <td>Acer</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>8</td>\n",
       "      <td>2.40</td>\n",
       "      <td>45074.8800</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i7</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Other/No OS/Linnux</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>287</th>\n",
       "      <td>Asus</td>\n",
       "      <td>Ultrabook</td>\n",
       "      <td>8</td>\n",
       "      <td>1.70</td>\n",
       "      <td>52054.5600</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>141.211998</td>\n",
       "      <td>Intel Core i5</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>Nvidia</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1089</th>\n",
       "      <td>Acer</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>2.40</td>\n",
       "      <td>20619.3600</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>AMD Processor</td>\n",
       "      <td>500</td>\n",
       "      <td>0</td>\n",
       "      <td>AMD</td>\n",
       "      <td>Windows</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>136</th>\n",
       "      <td>Lenovo</td>\n",
       "      <td>Notebook</td>\n",
       "      <td>4</td>\n",
       "      <td>1.90</td>\n",
       "      <td>13445.7408</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>100.454670</td>\n",
       "      <td>Other Intel Processor</td>\n",
       "      <td>1000</td>\n",
       "      <td>0</td>\n",
       "      <td>Intel</td>\n",
       "      <td>Other/No OS/Linnux</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Company   TypeName  Ram  Weight       Price  Touchscreen  IPS  \\\n",
       "93      Dell     Gaming    8    2.65  63669.6000            0    0   \n",
       "379     Acer   Notebook    8    2.40  45074.8800            0    0   \n",
       "287     Asus  Ultrabook    8    1.70  52054.5600            0    0   \n",
       "1089    Acer   Notebook    4    2.40  20619.3600            0    0   \n",
       "136   Lenovo   Notebook    4    1.90  13445.7408            0    0   \n",
       "\n",
       "             ppi              Cpu Brand   HDD  SSD Gpu Brand  \\\n",
       "93    141.211998          Intel Core i5     0  256    Nvidia   \n",
       "379   141.211998          Intel Core i7  1000    0    Nvidia   \n",
       "287   141.211998          Intel Core i5     0  256    Nvidia   \n",
       "1089  100.454670          AMD Processor   500    0       AMD   \n",
       "136   100.454670  Other Intel Processor  1000    0     Intel   \n",
       "\n",
       "                      os  \n",
       "93               Windows  \n",
       "379   Other/No OS/Linnux  \n",
       "287              Windows  \n",
       "1089             Windows  \n",
       "136   Other/No OS/Linnux  "
      ]
     },
     "execution_count": 213,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1e44c0a6-4adf-4875-86fb-936678ad4442",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "44076640-7ce7-40c1-a243-160199d974c6",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cb045b05-dfe1-4749-a022-f65029c8f4ec",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
